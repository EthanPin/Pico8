pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
function _init()
	make_player()
end

--start at main menu
menu = true
--number of sapsleft to water
sapshit = 0
--lvl you are playing 0=home/sel
lvl = 4 --4 is no level for game start
--stops the "door open ring"
doorsfx = true
--number of water shots fired
shots = 0
--your top score for each level
topscore1 = 1000
topscore2 = 1000
topscore3 = 1000
--player's score
score = 9999
--is the level cleared
lvlclear = false
--change the song?
nexttrack = true

function _update()
	 --main menu
	 if(menu and (btnp(‚ùé) or btnp(üÖæÔ∏è))) then
	   
	   menu = false --starts the game
	   
	   mset(85,56,068)
    mset(86,56,069)
    lvl = 0 --sets music and lvl
    nexttrack = true
	 end
	 
	 if (not menu) then --dont move the player if not playing
  	 move_player()
  end
  
  --music--
  if (nexttrack) then
    music(-1,300)
    nexttrack = false
    if (lvl == 0) then
      if (p.home) then
        --home track pattern 1-4
        music(1)
      else
        --lvl select pattern 0
        music(0) 
      end
    end
    if (lvl == 1) then
      --lvl 1 pattern 17-23
      music(17)
    end
    if (lvl == 2) then 
      --lvl 2 pattern 5-8
      music(5)
    end
    if (lvl == 3) then
      --lvl 3 pattern 9-16
      music(9)
    end
  end  
  --end music--
  
  
	 --bullet handeling
	 if (shots < 20) then --if you have ammo
	   if (btnp(‚ùé) and p.dir and not p.home) then
	     if (p.aim == 1) then --aim up
	       newbullet(p.x+4,p.y+2,4,4,0.3,-2,not p.dir)  --sets bullet start
      elseif (p.aim == 2) then --aim down
        newbullet(p.x+4,p.y+14,4,4,0.3,2,not p.dir)  --sets bullet start
        p.y -= 1 --bullet push
      else --p.aim is 0 
        newbullet(p.x+8,p.y+8,4,4,2,0.1,not p.dir)  --sets bullet start
      end
      sfx(0,-1,4,1) 
      shots += 1
    end
    if (btnp(‚ùé) and not p.dir and not p.home) then
      if (p.aim == 1) then --aim up
	       newbullet(p.x+4,p.y+2,4,4,-0.3,-2,not p.dir)  --sets bullet start
      elseif (p.aim == 2) then --aim down
        newbullet(p.x+4,p.y+14,4,4,-0.3,2,not p.dir)  --sets bullet start
        p.y -= 2 --bullet push
      else --p.aim is 0
        newbullet(p.x,p.y+8,4,4,-2,0.1,not p.dir)  --sets bullet physics & start
      end
      sfx(0,-1,4,1)
      shots += 1
    end
  end
  
  local i,j=1,1               --to properly support objects being deleted, can't use del() or deli()
  while (objs[i]) do           --if we used a for loop, adding new objects in object updates would break
    if objs[i]:update() then
      if (i!=j) objs[j]=objs[i] objs[i]=nil --shift objects if necessary
      j+=1
    else objs[i]=nil end       --remove objects that have died or timed out
    i+=1                       --go to the next object (including just added objects)
  end
  --end bullet handeling
  
end



function make_player()
	 p={}  --create empty table

	 p.x=680 --player's exact pixel
 	p.y=440 --position on screen
 	p.home = true --am i home/lvl select

 	p.clm = p.x/8	 --collumn
 	p.row = p.y/8  --row

 	--p.gnd	 = true 	--on ground?
 	p.dir	 = true		--direction true = >>>
 	p.runfrm  = 0		--run anim sprites
	 p.dash = false	--am i dashin
	 p.jump = false	--am i jumpin
  --global declared again below
	 p.rise = 0				--jmp distance
  --0 horizontal, 1 up, 2 down
  p.aim = 0      --aim direction
  p.sleep = false --go back to bed?
  p.idle = 0 --how long have i stood still?

	 p.sprite=032 --player sprite
end

function move_player()
	 --depending on which buttons
	 --are pressed

	 --left
 	if (btn(‚¨ÖÔ∏è) and not btn(‚û°Ô∏è)) then
		--get the tile and check the flag to the left
		  if --(fget(mget(((p.x-1)/8),((p.y)/8))) != 001) and
		    (fget(mget(((p.x-1)/8),((p.y-1)/8)+1)) != 001) and
		  		(fget(mget(((p.x-1)/8),((p.y-1)/8)+2)) != 001) then--solid
		  		--(fget(mget(((p.x-1)/8),((p.y-1)/8)+1)) != 009) --nets
		  		--(fget(mget(((p.x-1)/8),((p.y-1)/8)+2)) != 009)
						p.x-=1
						walk()
				else
						p.sprite = 034 --hit a wall
		  end
		  p.clm = p.x/8  --update player collumn
    --keeping shooting direction
		  if (not btn(‚ùé)) then p.dir = false end
	 end --left
	 --right
	 if (btn(‚û°Ô∏è) and not btn(‚¨ÖÔ∏è)) then
		  --get the tile and check the flag 2 tiles 2 the right
		  if --(fget(mget((p.x/8)+2,((p.y)/8))) != 001) and
		  		(fget(mget((p.x/8)+2,((p.y-1)/8)+1)) != 001) and
		  		(fget(mget((p.x/8)+2,((p.y-1)/8)+2)) != 001) then--solid
		  		--(fget(mget((p.x/8)+2,((p.y-1)/8)+1)) != 009) and --nets
		  		--(fget(mget((p.x/8)+2,((p.y-1)/8)+2)) != 009)
				  p.x+=1
				  walk()
				else
						p.sprite = 034  --hit a wall
		  end
		  p.clm = p.x/8  --update player collumn
		  --keep shooting direction
		  if (not btn(‚ùé)) then p.dir = true end
	 end --right
	 --both l+r directions
	 if (btn(‚û°Ô∏è) and btn(‚¨ÖÔ∏è)) then
	 		walk()
	 end --both l+r directions
	 
	 --gravity
	 
	 --needs air time after hitting jump (keep upward momentum)
	 
	 --if in the air
	 if (fget(mget(((p.x-1)/8)+2,((p.y)/8)+2)) != 001) and --in air solid
	 		(fget(mget(((p.x-1)/8)+1,((p.y)/8)+2)) != 001) and --in air
	 		(fget(mget(((p.x)/8),((p.y)/8)+2)) != 001) and --in air
	 		(fget(mget(((p.x-1)/8)+2,((p.y)/8)+2)) != 009) and --in air net
	 		(fget(mget(((p.x-1)/8)+1,((p.y)/8)+2)) != 009) and --in air
	 		(fget(mget(((p.x)/8),((p.y)/8)+2)) != 009) then --in air
				--holding jump
				if (btn(üÖæÔ∏è) and p.rise > 0) then
  				--if you hit the ceiling
  				if (fget(mget(((p.x-3)/8)+2,((p.y)/8))) == 001) or --ceiling
	 		    (fget(mget(((p.x-1)/8)+1,((p.y)/8))) == 001) or --ceiling
	 		    (fget(mget(((p.x+3)/8),((p.y)/8))) == 001) then
  				  p.rise -= 5 --hit head penalty
  				  p.sprite = 036 --ouch sprite
  				  sfx(0,-1,2,2)
  				--you are holding jump
  				else
  				  p.rise -= 1
  				  p.y -= 1
  				  if (btn(‚¨ÜÔ∏è)) then
		        p.sprite = 072 --looking up
		        p.aim = 1
		      elseif (btn(‚¨áÔ∏è)) then
		        p.sprite = 102 --looking up
		        p.aim = 2
		      else
  				    p.sprite = 038
  				    p.aim = 0
  				  end
  				end
  		--then you are just falling		
  		else 
  				p.y += 1
  				p.rise = 0
  				if (btn(‚¨ÜÔ∏è)) then
		      p.sprite = 070 --looking up
		      p.aim = 1
		    elseif (btn(‚¨áÔ∏è)) then
		      p.sprite = 104 --looking down
		      p.aim = 2
		    else
  				  p.sprite = 040
  				  p.aim = 0
  			 end
  		end
		--if on ground		
		else 
		  --ready jump height
		  p.rise = 35 --on gnd no jump
				--standing still
				if (not btn(‚û°Ô∏è) and not btn(‚¨ÖÔ∏è)) then
						if (btn(‚¨ÜÔ∏è)) then
		      p.sprite = 064 --looking up
		      p.aim = 1
		    else
						  p.sprite = 032
						  p.aim = 0
						end
				end
				--dropping through net
				if (btn(‚¨áÔ∏è) and ((fget(mget(((p.x-1)/8)+2,((p.y)/8)+2)) == 009) or 
				  (fget(mget(((p.x-1)/8)+1,((p.y)/8)+2)) == 009) or 
				  (fget(mget(((p.x)/8),((p.y)/8)+2)) == 009) )) then
      p.y += 1
    end
				--start jump
				if (btnp(üÖæÔ∏è)) then
    		p.y -= 2
    		p.sprite = 038--jump frame
    		p.jump = true
    		sfx(0,-1,0,2)
  		end
  end
  
  --is home check
  if (p.x < 810 and p.x > 650 and p.y < 492 and p.y > 420) then
    --calls for next track before setting p.home=true
    if (p.home == false) then
    		nexttrack = true
    end
		  p.home = true
		else
		  --calls for next track before setting p.home=true
		  if (p.home == true) then
    		nexttrack = true
    end
		  p.home = false
		end    	
  
  --reloading in water
  if (fget(mget(((p.x)/8)+1,((p.y)/8)+1)) == 002) and 
    (shots>0) then --if in water and you don't have a full clip
    shots -= .5
  end
  
  --level 1 (red) portals
  for y_dist = -2,4 do
    for x_dist = -2,4 do
      if (fget(mget(((p.x)/8)+x_dist,((p.y-1)/8)+y_dist)) == 010) then
      	 mset(((p.x)/8)+x_dist,((p.y-1)/8)+y_dist,112)
      elseif (fget(mget(((p.x)/8)+x_dist,((p.y-1)/8)+y_dist)) == 014) then
    	   mset(((p.x)/8)+x_dist,((p.y-1)/8)+y_dist,096)
      end
    end
  end
  if (fget(mget(((p.x)/8)+1,((p.y-1)/8)+2)) == 010) then
    p.x = 30
    p.y = 30
    lvl = 1
    sapshit = 0
    doorsfx = true
    lvlclear = false --lvl start
    score = 9999
    nexttrack = true
    --resets sprites address 0x1000 - 0x3000
    reload(0x1000,0x1000,0x2000)
  end
  
  --level 2 (grn) portals
  for y_dist = -2,4 do
    for x_dist = -2,4 do
      if (fget(mget(((p.x)/8)+x_dist,((p.y-1)/8)+y_dist)) == 011) then
    	   mset(((p.x)/8)+x_dist,((p.y-1)/8)+y_dist,113)
      elseif (fget(mget(((p.x)/8)+x_dist,((p.y-1)/8)+y_dist)) == 015) then
    	   mset(((p.x)/8)+x_dist,((p.y-1)/8)+y_dist,097)
      end
    end
  end
  if (fget(mget(((p.x)/8)+1,((p.y-1)/8)+2)) == 011) then
    p.x = 350
    p.y = 470
    lvl = 2
    sapshit = 0
    doorsfx = true
    lvlclear = false --lvl start
    score = 9999
    nexttrack = true
    --resets sprites address 0x1000 - 0x3000
    reload(0x1000,0x1000,0x2000)
  end

  --level 3 (blu) portals
  for y_dist = -2,4 do
    for x_dist = -2,4 do
      if (fget(mget(((p.x)/8)+x_dist,((p.y-1)/8)+y_dist)) == 012) then
    	   mset(((p.x)/8)+x_dist,((p.y-1)/8)+y_dist,114)
      elseif (fget(mget(((p.x)/8)+x_dist,((p.y-1)/8)+y_dist)) == 016) then
    	   mset(((p.x)/8)+x_dist,((p.y-1)/8)+y_dist,098)
      end
    end
  end
  if (fget(mget(((p.x)/8)+1,((p.y-1)/8)+2)) == 012) then
    p.x = 965
    p.y = 23
    lvl = 3
    sapshit = 0
    doorsfx = true
    lvlclear = false --lvl start
    score = 9999
    nexttrack = true
    --resets sprites address 0x1000 - 0x3000
    reload(0x1000,0x1000,0x2000)
  end
  
  --level 0 (org) portals
  for y_dist = -2,4 do
    for x_dist = -2,4 do
      if (fget(mget(((p.x)/8)+x_dist,((p.y-1)/8)+y_dist)) == 013) then
    	   mset(((p.x)/8)+x_dist,((p.y-1)/8)+y_dist,115)
      elseif (fget(mget(((p.x)/8)+x_dist,((p.y-1)/8)+y_dist)) == 017) then
    	   mset(((p.x)/8)+x_dist,((p.y-1)/8)+y_dist,099)
      end
    end
  end  
  if (fget(mget(((p.x)/8)+1,((p.y-1)/8)+2)) == 013) then
    p.x = 715
    p.y = 440
    --save hi-score
    if (lvl == 1) then --lvl1
      if (score > topscore1 and lvlclear) then
        topscore1 = score
      end
    elseif (lvl == 2) then --lvl2
      if (score > topscore2 and lvlclear) then
        topscore2 = score
      end
    else --lvl3
      if (score > topscore3 and lvlclear) then
        topscore3 = score
      end
    end
    lvl = 0
    sapshit = 0
    doorsfx = true
    nexttrack = true
    --resets sprites address 0x1000 - 0x3000
    reload(0x1000,0x1000,0x2000)
  end
 
end
-->8
--bullet settings--

--wall flag = 1 
--water flag = 2
--sappling flag = 3,4,5,6,7,8
--glass / net flag = 9
--red portal = 10, 14
--grn portal = 11, 15
--blu portal = 12, 16
--org portal = 13, 17
--bed flag = 18

objs = {}                    --a list of all the objects in the game (starts empty)
function objdraw(o)          --a basic function for drawing objects,
  spr(o.spr,o.x,o.y,1,1,o.dir)            --as long as those objects have spr, x, and y values inside
end

function bulletupdate(b)     --a function for moving bullets a little bit at a time
  b.x += b.dx                 --x moves by the change in x every frame (dx)
  b.y += b.dy                 --y moves by the change in y every frame (dy)
  b.time -= 1                 --if bullets have existed for too long, erase them
  --bullet hits wall
  if (fget(mget(((b.x)/8),((b.y)/8))) == 001) then
    return false
  end
  
  --sappling collision could be consolidated?
  
  --bullet hits yellow sappling
  if (fget(mget(((b.x)/8),((b.y)/8))) == 003) then
    b.spr = 011
    mset(b.x/8,b.y/8,009) --changes sappling to a flower
    sfx(0,-1,5,4)
    sapshit+=1
  end
  --bullet hits red sappling
  if (fget(mget(((b.x)/8),((b.y)/8))) == 004) then
    b.spr = 011
    mset(b.x/8,b.y/8,025) --changes sappling to a flower
    sfx(0,-1,5,4)
    sapshit+=1
  end
  --bullet hits blue sappling
  if (fget(mget(((b.x)/8),((b.y)/8))) == 005) then
    b.spr = 011
    mset(b.x/8,b.y/8,027) --changes sappling to a flower
    sfx(0,-1,5,4)
    sapshit+=1
  end
  --bullet hits pink sappling
  if (fget(mget(((b.x)/8),((b.y)/8))) == 006) then
    b.spr = 011
    mset(b.x/8,b.y/8,029) --changes sappling to a flower
    sfx(0,-1,5,4)
    sapshit+=1
  end
  --bullet hits purple sappling
  if (fget(mget(((b.x)/8),((b.y)/8))) == 007) then
    b.spr = 011
    mset(b.x/8,b.y/8,023) --changes sappling to a flower
    sfx(0,-1,5,4)
    sapshit+=1
  end
  --bullet hits orange sappling
  if (fget(mget(((b.x)/8),((b.y)/8))) == 008) then
    b.spr = 011
    mset(b.x/8,b.y/8,021) --changes sappling to a flower
    sfx(0,-1,5,4)
    sapshit+=1
  end
  
  return b.time > 0           --returns true if still alive, false if it needs to be removed
end

function newbullet(x,y,w,h,dx,dy,dir)  --bullets have position x,y, width, height, and move dx,dy each frame
  local b = {                 --only use the b table inside this function, it's "local" to it
    x=x,y=y,dx=dx,dy=dy,       --the x=x means let b.x = the value stored in newbullet()'s x variable
    w=w,h=h,dir=dir,                   --b.w and b.h are also set to the function's w and h args
    time=26,                   --this is how long a bullet will last before disappearing
    update=bulletupdate,       --you can put functions in tables just like any other value
    spr=010,draw=objdraw         --bullets don't have special drawing code, so re-use a basic object draw
  }
  add(objs,b)                 --now we can manage all bullets in a list
  return b                    --and if some are special, we can adjust them a bit outside of this function
end


-->8
--walk--

function walk()
  --use  <= instead of ==
		if (p.runfrm >= 9 and p.runfrm < 12) then
		  if (btn(‚¨ÜÔ∏è)) then
		    p.sprite = 076 --looking up
		    p.aim = 1      --aim up
		  else
		    p.sprite = 044 --normal
		    p.aim = 0      --reset aim
		  end
		  p.runfrm = 0
		elseif (p.runfrm >= 6 and p.runfrm < 9) then
		  if (btn(‚¨ÜÔ∏è)) then
		    p.sprite = 078
		    p.aim = 1
		  else
		    p.sprite = 046
		    p.aim = 0
		  end
		  p.runfrm += 1
		elseif (p.runfrm >= 3 and p.runfrm < 6) then
		  if (btn(‚¨ÜÔ∏è)) then
		    p.sprite = 076
		    p.aim = 1
		  else
		    p.sprite = 044
		    p.aim = 0
		  end
		  p.runfrm += 1
		else
    if (btn(‚¨ÜÔ∏è)) then
		    p.sprite = 074
		    p.aim = 1
		  else
      p.sprite = 042
      p.aim = 0
    end
    p.runfrm += 1
  end
end
-->8
--draw--

function _draw()
	 cls()
  if (menu) then --if game just started
    map(0,0,0,0,128,128) --big map
    camera(660,380)
    print("‚àßwater ‚óÜ plants‚àß",680,426,0)
    print("‚àßwater ‚óÜ plants‚àß",681,425,3)
    print("‚óÜ press z or x to start ‚óÜ ",672,436,0)
    print("‚óÜ press z or x to start ‚óÜ ",673,435,11)
  else
  
   	--map(0,0,0,0,64,64) --draws map
   	map(0,0,0,0,128,128) --big map
 	
   	--2 coordinates
   	--rect(x1,y1,x2,y2,clr)

   	--hud background 
    rectfill(p.x-32,p.y-76,p.x+60,p.y-59,0)
    rectfill(p.x-31,p.y-75,p.x+59,p.y-60,7)
  
    if (lvl == 0) then
      if (p.home) then --if you are home
        print("top scores",p.x-29,p.y-73,0)
        print("1:".. topscore1 ..
            " 2:".. topscore2 ..
            " 3:".. topscore3 ,p.x-29,p.y-65,0)
      else
      	 print("level select",p.x-29,p.y-73,0)
      	 if (p.x < 875) then
      	   print("level 1: grand falls",p.x-29,p.y-65,0)
      	 elseif (p.x >= 875 and p.x < 940) then
      	   print("level 2: net climb",p.x-29,p.y-65,0)
      	 else
      	   print("level 3: floating",p.x-29,p.y-65,0)
      	 end
      end
    end
  
    --saplings left counter lvl1-3 
    if (lvl == 1) then
      print("score: ".. score,p.x-29,p.y-73,0)
      rect(p.x-29,p.y-66,p.x+56,p.y-61,3)
      line(p.x-16,p.y-66,p.x-16,p.y-61,8)
      line(p.x-3 ,p.y-66,p.x-3 ,p.y-61,8)
      line(p.x+8 ,p.y-66,p.x+8 ,p.y-61,8)
      line(p.x+28,p.y-66,p.x+28,p.y-61,8)
      --checker flag
      line(p.x+56,p.y-67,p.x+57,p.y-66,0)
      line(p.x+56,p.y-66,p.x+57,p.y-65,7)
      line(p.x+56,p.y-65,p.x+57,p.y-64,0)
      line(p.x+56,p.y-64,p.x+57,p.y-63,7)
      line(p.x+56,p.y-63,p.x+57,p.y-62,0)
      line(p.x+56,p.y-62,p.x+57,p.y-61,7)
      line(p.x+56,p.y-61,p.x+57,p.y-60,0)
      if (not lvlclear) then --reduce score every frame
        score -= 1
      end
      if (sapshit == 13 and doorsfx) then --sap quota reached open gate
      		mset(35,10,017)
      		mset(36,10,017)
      		sfx(0,-1,9,3)
      		doorsfx = false
      end
      if (sapshit == 26 and not doorsfx) then --sap quota reached open gate
      		mset(1,19,017)
      		mset(2,19,017)
      		sfx(0,-1,9,3)
      		doorsfx = true
      end
      if (sapshit == 37 and doorsfx) then --sap quota reached open gate
      		mset(38,34,017)
      		mset(39,34,017)
      		sfx(0,-1,9,3)
      		doorsfx = false
      end
      if (sapshit == 57 and not doorsfx) then --sap quota reached open gate
      		mset(16,42,017)
      		mset(17,42,017)
      		sfx(0,-1,9,3)
      		doorsfx = true
      end
      if (sapshit == 85 and doorsfx) then --sap quota reached open gate
      		mset(11,58,099)
      		mset(22,58,099)
      		sfx(0,-1,9,3)
      		doorsfx = false
      		lvlclear = true --lvl completed
      end
    end

    if (lvl == 2) then
      print("score: ".. score,p.x-29,p.y-73,0)
      rect(p.x-29,p.y-66,p.x+55,p.y-61,3)
      line(p.x-12,p.y-66,p.x-12,p.y-61,8)
      line(p.x+6 ,p.y-66,p.x+6 ,p.y-61,8)
      line(p.x+14,p.y-66,p.x+14,p.y-61,8)
      line(p.x+23,p.y-66,p.x+23,p.y-61,8)
      line(p.x+42,p.y-66,p.x+42,p.y-61,8)
      --checker flag
      line(p.x+55,p.y-67,p.x+56,p.y-66,0)
      line(p.x+55,p.y-66,p.x+56,p.y-65,7)
      line(p.x+55,p.y-65,p.x+56,p.y-64,0)
      line(p.x+55,p.y-64,p.x+56,p.y-63,7)
      line(p.x+55,p.y-63,p.x+56,p.y-62,0)
      line(p.x+55,p.y-62,p.x+56,p.y-61,7)
      line(p.x+55,p.y-61,p.x+56,p.y-60,0)
      if (not lvlclear) then --reduce score every frame
        score -= 1
      end
      if (sapshit == 17 and doorsfx) then --sap quota reached open gate
      		mset(77,52,017)
      		mset(78,52,017)
      		sfx(0,-1,9,3)
      		doorsfx = false
      end
      if (sapshit == 35 and not doorsfx) then --sap quota reached open gate
      		mset(45,42,017)
      		mset(46,42,017)
      		sfx(0,-1,9,3)
      		doorsfx = true
      end
      if (sapshit == 43 and doorsfx) then --sap quota reached open gate
      		mset(75,26,017)
      		mset(75,27,017)
      		sfx(0,-1,9,3)
      		doorsfx = false
      end
      if (sapshit == 52 and not doorsfx) then --sap quota reached open gate
      		mset(42,23,017)
      		mset(43,23,017)
      		sfx(0,-1,9,3)
      		doorsfx = true
      end
      if (sapshit == 71 and doorsfx) then --sap quota reached open gate
      		mset(79,10,017)
      		mset(80,10,017)
      		sfx(0,-1,9,3)
      		doorsfx = false
      end
      if (sapshit == 84 and not doorsfx) then --sap quota reached open gate
      		mset(47,5,099)
      		sfx(0,-1,9,3)
      		doorsfx = true
      		lvlclear = true --lvl completed
      end
    end
  
    if (lvl == 3) then
      print("score: ".. score,p.x-29,p.y-73,0)
      rect(p.x-29,p.y-66,p.x+46,p.y-61,3)
      line(p.x-16,p.y-66,p.x-16,p.y-61,8)
      line(p.x-8 ,p.y-66,p.x-8 ,p.y-61,8)
      line(p.x+16,p.y-66,p.x+16,p.y-61,8)
      line(p.x+33,p.y-66,p.x+33,p.y-61,8)
      --checker flag
      line(p.x+46,p.y-67,p.x+47,p.y-66,0)
      line(p.x+46,p.y-66,p.x+47,p.y-65,7)
      line(p.x+46,p.y-65,p.x+47,p.y-64,0)
      line(p.x+46,p.y-64,p.x+47,p.y-63,7)
      line(p.x+46,p.y-63,p.x+47,p.y-62,0)
      line(p.x+46,p.y-62,p.x+47,p.y-61,7)
      line(p.x+46,p.y-61,p.x+47,p.y-60,0)
      if (not lvlclear) then  --reduce score every frame
        score -= 1
      end
      if (sapshit == 13 and doorsfx) then --sap quota reached open gate
      		mset(84,16,017)
      		mset(85,16,017)
      		sfx(0,-1,9,3)
      		doorsfx = false
      end
      if (sapshit == 21 and not doorsfx) then --sap quota reached open gate
     		mset(96,28,017)
      		mset(97,28,017)
      		sfx(0,-1,9,3)
      		doorsfx = true
      end
      if (sapshit == 45 and doorsfx) then --sap quota reached open gate
      		mset(116,31,017)
      		mset(117,31,017)
      		sfx(0,-1,9,3)
      		doorsfx = false
      end
      if (sapshit == 62 and not doorsfx) then --sap quota reached open gate
      		mset(108,20,017)
      		mset(109,20,017)
      		sfx(0,-1,9,3)
      		doorsfx = true
      end
      if (sapshit == 75 and doorsfx) then --sap quota reached open gate
      		mset(105,31,099)
      		sfx(0,-1,9,3)
      		doorsfx = false
      		lvlclear = true --lvl completed
      end
    end
  
    --number of saps hit
    if (sapshit > 0) then
     	rectfill(p.x-28,p.y-65,p.x-29+sapshit,p.y-62,11)
    end
  
    if (not p.home) then --show ammo if not home
      --water tank background
      rectfill(p.x-52,p.y-76,p.x-39,p.y-46,0)
      rectfill(p.x-51,p.y-75,p.x-40,p.y-47,7)
      --water tank
      rect(p.x-49,p.y-72,p.x-42,p.y-50,1)
      rectfill(p.x-48,p.y-71,p.x-44,p.y-51,13)
     	rectfill(p.x-48,p.y-71+shots,p.x-43,p.y-51,12)
     	--water tank tickers
     	line(p.x-49,p.y-67,p.x-47,p.y-67,0)
      line(p.x-49,p.y-60,p.x-47,p.y-60,0)
      line(p.x-49,p.y-54,p.x-46,p.y-54,8)
    end
  
  

 	  --draw the player's sprite at
 	  --p.x,p.y
 	  camera(p.x - 56, p.y - 80)
	   spr(p.sprite,p.x,p.y,2,2,not p.dir,false)
	 
	   --bullets draw
    for o in all(objs) do o:draw() end
  end
end
__gfx__
0000000064404564bbbbbbbb505555057b77b6bb55555555c7cc7cc70000000000000000a6a7a0aa00000000c00c000c000000002e3333ee5555555500000000
0000000004046445333bb3330600006063b3060466766666ccc7cccc0000000000000000007606700000000000000c0000000000e703370e56666665000ccc00
007007004454404463333337506006054640743766666767cccccccc00000000000000007706a6a7000cc000cccc0000000000003703370e56000065005cccc5
00077000646464545f3333f6500660056006407667666666ccccc7cc0000000000676000a600b06700c1cc0001c1ccc000000000333333335600006500555555
0007700046540540f6ff6f5f500660056600070666676666c7cccccc00000000007a70007a70b0a700cccc000cccc1c000000000333bb3335600006500000000
0070070050446454f65f76f6506006056070706667666676cccccccc00077000006bb000a000b000000cc000c1cc000000000000e33834445666666500900000
00000000446054647ffff5f5060000606007070766676666cc7ccc7c077cc77000033000000bb000000000000c0000c004444440ee33434e5666666500950000
00000000445446405f7f6f7f505555057666666755555555cccccccc77cccc770000b000000bb000000000000000c00c00400400ee3ee3ee5666666500a00000
08008080000b000b0000000000000000000000000003330000000000020000720000000080080008000000000110171000000000e00e0e005566665500a00000
8080080800000000000000000000000000000000009993a0000000007220072000000000b0b0000b00000000071c10c0000000000e07b00e5566665500a90000
080800800b000b0000000000000000000000000000999390000000000222022700000000b0b0800b000000001110b0110000000000eb0e705666666500c9a000
008080080000000007777000000000000000000009a993a00000000000072020000000000b00b08b000000000c0b11c700000000007b7e00566666650cc9a000
800808000000000044444444444444440000000009999390000000002702b222000000008b00b0b000000000700b07c100000000e70bb00e566666650cc90000
08008080000b000b0044444444444400000030000999933a000000000222b27000000000b80bb0b800001000c00bb010000070000e0b07e0566666650cc90000
808008080000000000044000000440000009900009999930000227000000b00000088b000bbb0b00001110000100b001000ee000000b00005666666566666666
080800800b000b000004000000004000000990000a999a300022b0000000b0000008bb00000bb000001bb0000000b00000e0be00000b00005555555555555555
0000000666000000a000a006655555500a0006655000a0a000000660000000000000066000000000000000000000000000000000000000000000000000000000
00066660566000000000000600055555000655005550000000000066500000000000006650000000000006600000000000000600000000000000000550000000
000055605556000000a0066555555771a06005505555000066666000555000006666600055500000000000655000000000000660000000000000066055500000
0000055600560000a00006000555577100000055557500a000055600571500000005560057750000665550005550000000000065500000000055500055550000
00000055555000000000000000771771000000055555500000000555577500000000055557150000000005005555000066555000555000000060050057150000
0000055557150000a000000005771555000000055555700000000005555550000000000555555000000000555715000000000505555500000060005555555000
000005571715000000a0000cc5555575000000555550700000000005555570000000000555557000000000055555500000000055571550000000000555555000
00000057155000000000069cc5555070000005ccc550000000000055555070000000005555507000000000055555700000000005555570000000000555557000
00000ccc55700000a000069cc5555500000005ccccaaa990000005ccc5500000000005ccc5500000000000555550700000000555555070000000005555507000
00000ccccaaa990000000a9c556655560000059999900000000005ccccaaa990000005ccccaaa990000005ccc5500000000005ccc5500000000005ccc5500000
00005999995556000007009a56665556000705556a00000000000599999000000000059999900000000005ccccaaa990000005ccccaaa990000005ccccaaa990
00005556a55500000007755a566555500007555555000000000705556a000000000705556a000000000005999990000000000599999000000000759999900000
07055555555000000007755a55555500000075500556000000075555550000000007555555000000000705556a000000000005556a000000000775556a000000
07755555550000000000055905555000000005560000000000007550055600000000755005560000000755555500000000750555550000000007555555000000
07555555555000000006555965550000000000000000000000000556000000000000055600000000000075555000000000075555500000000000705555000000
00005555555556000006660066600000000000000000000000000000000000000000000000000000000005555560000000007555560000000000000056000000
00000000000000000000000666000000000000000000000000000660000000000000066000000000000000000000000000000000000000000000000000000000
00000000000000000006666056600000000000000000000000000066500000000000006650000000000006600000000000000600000000000000000550000000
00066600000000000000556055560000777700000000000066666090555000006666609055500000000000655000000000000660000000000000066055500000
00655590000000000000055600560000777700000000000400055690571500000005569057750000665550005550000000000065500000000055500057150000
065000955550000000000055555000004999999999999994000005a557750000000005a557150000000005005715000066555000555000000060059057750000
065065a57155000000000555517500000499999999999994000000a555555000000000a555555000000000955775000000000595571500000060009555555000
000655a57755000000000551717500000444444444444444000000a955557000000000a95555700000000095555550000000009557755000000000a555555000
006500a95557000000000051755000000044000000004400000000c9a5507000000000c9a5507000000000a555557000000000a555557000000000a555557000
065000c9a507000000000ccc55700000006555000000000000000cc96550000000000cc965500000000000a555507000000005a555507000000000a555507000
06500cc96500000000000ccccaaa9900065666555555000000000cc95556000000000cc955560000000005a955500000000005a955500000000005c955500000
00005cc9555560000000599999555600756556655555577000000cc95550000000000cc955500000000005c9a5560000000005c9a550000000000cc9a5560000
00005cc95550000000005556a555000077566555555577740007055555000000000705555500000000000cc96550000000000cc96556000000007cc965000000
0705555555500000070555555550000049956555555555940007555555000000000755555500000000070cc95500000000000cc95500000000077cc955000000
0775555555000000077555555500000004999999999999940000755005560000000075500556000000075cc95500000000750cc95500000000075cc955000000
07555555555000000755555555500000044444444444444400000556000000000000055600000000000075555000000000075555500000000000705555000000
00005555555556000000555555555600004400000000440000000000000000000000000000000000000005555560000000007555560000000000000056000000
80000000b0000000c00000009000000000005555000000000000066000000000000006600000000050b00cccccccc7cc00000000000000000000000000000000
000000080000000b0000000c00000009000000605555000000000066500000000000006650000000500b0cc7cccccccc00000000000000000000000000000000
80000000b0000000c0000000900000000000060000600000666660005550000066666000555000005cb0cbcccccccccc00000000000000000000000000000000
00000080000000b0000000c0000000900000566606005555000556005715000000055600577500005cb0ccbccccccccc00000000000000000000000000000000
080000000b0000000c000000090000005555000056660060000005555775000000000555571500005cbccbccccc55ccc00000000000000000000000000000000
0080080000b00b0000c00c00009009000060000000000600000000055555500000000005555550005bccbcc4cc555ccc00000000000000000000000000000000
000000000000000000000000000000000600000000005666000000059cc57000000000059cc5700054f4fffffff4ff4f00000000000000000000000000000000
556ee5565563355655611556556ff5565666000000000000000000559cc07000000000559cc07000666666666666666600000000000000000000000000000000
0000000e00000003000000010000000f0044400000000000000005569cc00000000005569cc00000ccc7ccccccccccc500000000000000000000000000000000
e00000003000000010000000f000000004000400000000000000055a9c5600000000055a9c560000cbcccc9cccc7cbc500000000000000000000000000000000
0000000e00000003000000010000000f4000004000000000000005559a500000000005559a500000cbc099cccbcccbc500000000000000000000000000000000
0e00000003000000010000000f0000004009a0b400000000000705555a000000000705555a000000cbc99c9cccbcccb500000000000000000000000000000000
000000e00000003000000010000000f00409bbb400000000000755555a000000000755555a000000bccccccccbcccbc500000000000000000000000000000000
00e00e00003003000010010000f00f000540b3340000000000007550095600000000755009560000cbccccccccbccbc500000000000000000000000000000000
000000000000000000000000000000005504333400000000000005560900000000000556090000004f4ffffffff4ff4500000000000000000000000000000000
55688556556bb556556cc55655699556500044400000000000000000000000000000000000000000666666666666666600000000000000000000000000000000
50505020202010101010102020606050505000000000000080505060600000000000000000000000505020202060505050505050505050505050501050505050
10505050505010500000000000606060105050000000008081006020800000202000000000102020202000700070810061100000000000600000000000000050
50105050505050505050505050505000000000000000c10020105050607000000000000000500000505000000060500000000000000000005000000000000000
00000000000000000000000060601010105050000000402020204020202020000000000000000000001050506010205020502000400000600000000000000050
500000000000000000000000000000000000000000a1404010105050606070007050505050500101505000007060500000000000000000005000a100c1008100
80410000000000000000006060501050105050006140606060606060606060506100000000410000001050501010000000000000400000608000000000000050
50000000000000000000000000004100000081004040000000000000505060605050500000000000505000006060500000000000000000001040404040404040
40400000000000000060606010101010105050a14060605050505050505050502000000000407040000050500000000000000000000000602020000000000050
50800080006100610000000000202000007020200000000000000000005050505000000000000000505000006050000000000000007000000000000000000000
00000000000000006060101010101010505050406060101010101010000000000000000000004000000000000000000000000000000040602020000000000050
50202020202020208000000000000020202020000000000000000000000000000000000000000000505070706050000000000000005060606060606060606060
60606060606060606010501010501010105050006000000000000000000000000000000000000000000000000000000000000000000040604040500000000050
501010101010101020a1000000000000000000000000000000000000000000000000000000000000505060606050000000000080705050505050505050505050
50505050505050505050505050505050505050006000000000000000000000000000000000000000000000000000000000000000000000604040a10000000050
50000000000000000020000000000000000000000000000000000000000000000000000000000000505060605050000000000020205000000000000000000000
00000000000000000000000000000000005050606000000000000000000000a10000000000000000000000000000000000000000000000604040400000000050
500000000000000000000000000000000000000000000000000000000000000000000000000000005050606050000000000000505000000000c1610000000000
00000000000000000000000081000000005050604040000000000000000000200000002000000000000000000000404040000000400000600000000000000050
5000000000000000000000000000000000000000000000c100000000000000000000000000000000505060605000000000a17050000000004040400000000000
00000000000000000040404040400000005050600000000000000000000000202000000000000000008000000000406040000000402020600000400000000050
507000000000000000701050505050500101505050505020a1000000000000000000000000000000505060605001012020505000000000000000000000000061
00800041c10000000000000000000000005050600000000000000000c1002020100000000000000000200020000040404000c100202010600000400000000050
50606060606060606060506060606060606060606060501020008000000000000000000000000000505050505000005050500000000000000000000000000040
40404040400000000000000000000000005050600000000000000000202020000000007000700000000000000000000000002020101000600000000000000050
50506050505010105050505050505050606050505050505010202000000000810000000000000000505050500000000000000000000000000080000081000000
00000000000000000000c100a1400000005050604000000000000000505010000000004060400000000000000000a10000201000001000606100000000008050
50105010505050505050000000000000606000000000005050501020100000200000000000000000505050600000000000000000000000000040404040000000
00000000000000000000404040400000005050600000000000410000005050000000004040406100000000000000202000200000000000604000000000002050
50005050500000000050000000000000606000000000000000505050102020101000414141414100505060604040400000000000000000000000000000000000
00000000000000000000000000000000005050600000000000400000000040400000000000004000000000000000000000000000000000604000000000000050
5000000000000000000000000061000060600000c100000000000050505050501010202020202000505060600000000000000000000000000000000000000000
000000000000000000000000000000002050506000000000000000000000000000000000000000000000c1000000000000000000000000600000000000000050
50000000000000000000000000404040606040404000000000000000000000005050505050505060505060607000618000000000c100a1006100000000000000
00000000000000000000000000000000005050600000000000000000000000000000000000000000000020000000000000000000000000600000c10000000050
50000000808000000000000000000000606000000000000000000000000000000000000000005050505060605050202020000000202020404081000000000000
40404000004000007050500000000000005050607000400000000000000000000000000000000000000000000000a10041000000000000600000400000004150
50000000202000000000000000000000606000000000000000000000008000000000000000000000505060606050606060606060606060202020606060606060
60606060606060606060500000000000005050501070007000700070000000000000000000000000000000002020202020507070000000600000400070502050
50000000002000410000000000c10000606000000000000080c10000002000000000000000000000505060605060606050505050505050505050505050505050
50505050505050505050508000000000005050506060506010501060606060606060606060606060606060605050505050505060606060606060606060105050
5081000000002020000000000040404060604040400000202020200000000000c100000000000000505010506060101050500000000000000000000000000000
00000000000000000060502050010150205050505050505050605050505050505050505050505050505050505050505050505050505050505050505050505050
50200000000000000000000000000000606000000000002000000000000000002000000000000000505050505010505050000000000000000000000000000000
00000000000000000060500000000000005050500000000000600000000000000000000050505000000000000000000000000000000000000000000000005050
5000a10000008000000000000000000060600000000000000000800000000081200000c100000000505000000000000050000000000000000000000000000000
000000000000000000605000a1000081005050000000000000600000000000000000000000500000000000000000000000000000000000000000000000000050
50002000000020004100000000000000606000a10000000000202000000000200000002000000020505000000000008050000000000000000000000000000000
00000000000000000060504040404040405050470000000000600000000000000000000030500000000000000000000000000000000000000000000000000050
500020000000002020000000004040406060404040000000000000000000002000000020000000105050c1000081a15050000000000000000000000000000000
000000000000000070505000000000000050503000455500006000000000c02131c0003030500000000000000000000000000000000000000000000000000050
50200080000000000000000000000000606000000000000000000000000000000000000000000010505050404040404000000000000000000000000000000000
00000000000000705050000000000000005050505020205000600000502020202020505050500000000000000000000000000000000000000000002600000050
50202020000000000000000000000000606000000000000000008181000000000000000000800010505000000000000000000000000000000000000000000000
00000000000000606000000000000000415050500000000000600000000000000000000050500000000006000000000000000000000000000000005000000050
50000000000000000050505000000000606000000000505050002020000000000000008000202050500000000000000000000000000000000000000000004100
80000000000000606000000061008000205050000000000000600000000000000000000000500000005050500000000040404040400000000000406040000050
5000c1000000000000501050507070006060007070505010500000000000000000412020201010505000360080707070000070000081008000a100c100002020
200000c1000000606000000020202020105050e0e000000000600000000000a6b6a7b700f0f00000000060000000000040000000400000000000004000000050
502020c1000000000050101050506060606060605010101050000000a10000800020101010105050505050202050506060606050202020202020202020202010
20202020507070606070705020101010505050e1e1003050706070705000003030303000f1f10000000060000000300040001670400030000000000000000050
50101020404000000050101010505050505050505010105050000000200000202010101010505050505010101010105050505010101010101010101010101010
10101010505060606060505050105050505050505010205060606060502010505050502050502020506060605020502010505050102050202020202020202050
50505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050
50505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050
__gff__
0001010009010202030000000000000001000000080007000400050006000000000000000000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000a0b0c0d0000000000000000000000000e0f1011000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505
0500000000000000000000000000000000000000000000000000000000000000000000000000000005050606000000000000000000000000000000000000000000000000000000000000000000000000000505000000000600000000000000000000000000000000000000000000000000000000060000000000000000000105
0500000000000000000000000000000000000000000000000000000000000000000000000000000005050606000000000000000000001400001a0000000000000008001c000000001a00000000000000000505000000000600000000000000000000000000000000000000000000000000000000060000000000000000000005
0500000000000000000000000000000000000000000000000000000000000000000000000000000005050606160000000000000000000404040404040000000004040202020004040404000000000000000505000000000600000000000000000000000000000000000000000000000000000000060000000000000000000005
0500000000000000000000000000000000000000000000000000000000000000000000000000000005050606021c00000000000000000000000000000000000000000000000000000000000000000000000505000000000600000000000000000000000000000000000000000000000000000000060000000000000063070005
05000000000000000000000000000000000000000018080000000000000000000000000000080808050506060602000000000000000000000000000000000000000000000000000000000000000000000005050000000006001c000000000000000000000000000700070000000000000000000006071c08001a000505050505
0500000000000000000000000000000000000000040502000000000000000000000000000802020205050505060602050800000000000000000000000000000000000000000000000008000000000000000505000000000607040700000000000000000000000004060400000000000000000007060202020202020505050505
05006300000000000807000700080018080000040005010000000000000000000000000202000000050500050506060602021a00001c0000000000000008001600000000000000000202020505050000000505000000000604060400000000000000000000000000040000000000000000000706010501010101010105000005
0502020202020202020606060202020202040400000101000000000000000000000000000000000005050000050505060606020101020202000000020102020202060606060606060606060606050000000505000000000600040000000000000000000000000800000000000000000000020201010101010800140016000005
0501010101010101010101010101010101040000000000000000000800000800080000000000000005050000000005050506060606060606060606060606060606060606050505050505050606050504040505000000000600000000000000000000000000000400000004000000001802060606050000000400040004000005
0505050505050505050505050505050505040700000000000007070202020202020505101005050505050000000000000505050505050505050506050505050505050505050000000105050606050510100505000000000600000000000018000000001400000400000004000000070206010501000000000000000000000005
05000000000000000000000000000005050506060606060606060501010101010500000000000000050500000000000000000000000000000005050500000000000000000000000000000006060000000005050000070406000000000004040404040404000000000000000000070605050000000000000000000000001c0005
050000000000000000000000000000000505050505050505050505050505050500000000000800020505181a0000000000000000000000000000000000000000000000000000000000000006060000001a05050000040604000008000005001a001c000500001a000000000707060500000500000000001a0000000000020205
050000000000001c1c000000000000000000000000000000000000000000000000000000000201010505020202080000000000000000000000000000000000000000000000001a000000000606000000020505000000040600000202020102020202020102020202020202020605000005000000000002020202000000000005
0500000000000002020000000000000000000000000000000000000000000007000700000202010105050000010200000000000000000000000000000000000000000000000202010000000606000004010505180000000600050505050000000000000000000000000000070500000500000000000005050505000000000005
050000000000000505000000000000000000000000000000000000000008050606060502010101010505000000000200000000000000000000000000000018001c0000000000000000000006060000000005050200000706070505000514000000000000000000001c0205050000050000000007070500000000050000000005
0500000000000000000000000000000000000000000000000000001c00020505060505000000010505050000000000000000000000000000000000000000020202000000000000000000070606070018000505051010050505050707050200000000000000040000020505000005000000000005050000000505000000000005
0500000016000000000000000400000000000000080000000000000200000000060600000000050105050004000000000000000000000000000800000000000000000000000000000002020606020102020505000000050506060606050000000000000000000000050500000500000018000505000000050000000000180005
0500000502000008001a00000404000018000002020200000007000000000007060607181a08010105050000000000000000000000000002020202000000001400001608000000000000000606000000000505000000000505050505050000000000000000000002050000050000000802050500000005000000000404040405
0510100502020202020202020101020202020201010101010506060606060606060505020202010105050000000000000008001a00070005010101020202020202020202020018000000000606000814000505001c00000004040404000000000000000000000805050005050000000205050000050500000000000000000005
0500000501010101010101010101010505050505050505050505050505050505050505050505050505050400000000000202020202050605050501010101010101010101010202020200000606020202020505000400000000000000040000180000000000000205000005041010040500000005050000001c18001600000005
05000005010500000000000000000000000000000000000000000000000000000000000000000000050500000000000102050505010505050505050505010505050505050505050501000706060505050505050000000800001a000000000004001a000000000505000000000000050505050505000000000202020200000005
0500000505000000000000000000000000000000000000000000000000000000000000000000001a05050000161c02050507060606060606060606060505050606060605060605060506050605060606060505000000040000040000000000000404000000000500000000000000000505050000000000020707000000000005
05000005000000000000000000000000000007000707070700000700000000080018000000000002050510100202050506060605050505050505050505050505050505050505050505060505050505050505050000000000000000000000000000000007010505000000000000001a0000050500000000040604000000000005
050000050000000000000000000018000000060605050505060606070000000202020200000000080505000005050706060505000000000000000000000000000000000000000000000605050500000606050500000000000000000000000000000007010500081c000700001404040700000505000000040404000008001605
0500000000000000000000000000020000000605050506050505060600000000010101000000000205050000000506050500000000000000000000000000000000000000000000000006000500000006060505000000000000000000000400000000010500000404060400000404060400000005050000000000000002020205
0500000000000000000000000000050500000605050101050500050600000000000000000000001a0505040000050505161c0000000000000014001a0008001c00000000000000000006001000000006050505000000000400050505000000000000050000000404060400000404060400000000010000000000000000000005
0500000000000000000000000000050500070605010101010500050600000000000000001c000002050500000005060502020204000000000002020202020202020400000000000000060010080000060505050000000007070506050707000000000500000000040502000000010104000000000100000016001a1c00001405
0500000000000000000000000000000000060605010101050500050600000000000002020200000805050000000606000000000000000000000000000000000000000000000000000605050202000004010505050505050505050505050505051010050000000000040000000000040000000002050000000202020202020205
05000000000000081400000000000000070605050105050500000506000000000000010101000002050504040006060000000018001a0000000000000000000000000000000000060605050500000004010505000000000000000600000000000000051800000000000000000000000000000801000000050505050505050505
050000000000000202020000000000070606050505050500000005060000020200000000000000000505000000060600000000020202020606060606060606060606060606060606050500000000000601050500000000000000060000000000000005021a1600000000000000000000001c0205000000050606060606060605
05020200001a0201010102000700070606050500000000000007050607000000010000000000000005050008070606060606060606060606050505050505050505050505050505050500000000000006010505000000000000000600000000001c02000102020014080000000000000000020501101005060505050505050505
__sfx__
000700000a020110200b73003730126101112015120181201d12035510305103c5101d100003001b7001e60024600187001e7002070032700233000470025400274002840029400294003c400000000000000000
011000200c033306000c615000000c033306000c615030000c033306000c615002000c6150c0000c0000c0001a013004000c033000000c0330c000260133e0001a01332000260130c000260130c6150c6150c615
011000201a1101f00015100200001511000000221000c000181101f0052b0052b005131101000515005140051511009100151100910013110151101d000151101511000000000001811000000000001511000000
001000000212002120021100212002120021100212002120001100012000120001100012000120001100012002120021100912009120021100212009120091100212002120021100212002120021100212002120
00100000110101c0001500015000150101b0001800016000180101a00018000110001a0102a00012000180001d0101e0001b000160001a010180001c0001b000180100000011000170001501018000180001c000
001000001101011000150101c000180101c0001a010190001b010160001a0101c0001b010100001a010260001b010110001a010000001d000000001d01018000110101d000120001600015000000001100000000
0010000016010000001a010000001d010000001f0101900020010000001f0100000020010000001f0100000020010000001f01000000000000000022010000001601000000160000000000000000000000000000
0010000018010000001c010000001f0101d0002101000000220100000021010000002201000000210100000022010000002101000000000000000024010000001801000000180000f00000000000000000000000
011000000c0003060030600000000c0003060030600030000c000306003060000200306000c0000c0000c00026000004000c000000000c0330c0000c0333e0000c033320000c0330c0000c0330c615306000c615
011000000c033000000c615000000c033000000c615000000c033000000c615000000c033000000c615000000c033000000c615000000c033000000c615000000c033000000c615000000c033000000c61500000
010e00000c0330c0000c000000000c0330c0000c000000000c033000000c000000000c0330c6150c6150c6150c0330000000000000000c0330000000000000000c0330000000000000000c0330c6150c6150c615
000e00000f1200f1200f1100f1201212012120121101212014120000001512015120141101412012120121100f1200f1200f1100f120121201212012110121201412000000151201512014110141201212012110
000e0000141201412014110141201712017120171101712019120000001a1201a12019110191201712017110141201412014110141201712017120171101712019120000001a1201a12019110191201712017110
000e0000191201912019110191201c1201c1201c1101c1201e120000001f1201f1201e1101e1201c1201c110191201912019110191201712017120171101712019120000001a1201a12019110191201712017110
000e0000141201412014110141200f1200f1200f1100f12012120000000f1200f1200f1100f12012120121100f1200f1200f1100f1200f1200f1200f1100f1200f12000000151201412013110121201112010110
010e00000c0330c0000c0000c0000c0330c0000c6110c6150c033000000c033000000c0330c6150c6000c6110c0330000000000000000c0330000000000000000c0330000000000000000c0330c6150c6150c615
010e00000c0330c0000c0000c0000c0330c0000c6110c6150c033000000c033000000c0330c6150c6000c6110c0330000000000000000c0330000000000000000c033000000c033000000c0310c6000c0330c600
000e00001a0211a0101a0201a0101a0201a0101a0201a0101a0101a0301a0201a0101a0301a0201a0101a03018031180201801018030180201801018030180201801018030180201801018030180201801018030
000e00001d0311d0201d0101d0301d0201d0101d0301d0201d0101d0301d0201d0101d0301d0201d0101d0301f0311f0201f0101f0301f0201f0101f0301f0201f0101f0301f0201f0101f0301f0201f0101f030
000e00001d0311d0201d0101d0301d0201d0101d0301d0201d0101d0301d0201d0101d0301d0201d0101d0301f0311f0201f0101f030200202001020030200201f0101f0301f0201f0101d0301d0201d0101d030
000e0000375103150000000000003551000000000000000032510000000000000000355100000000000000003250000000000002e500305103050032510355003551000000325100000032500000000000000000
000e00002101021010211000a3002401024010241002610026010260101e100270102701011000280102801021010210102a3002a300240102401013000130002601026010000002701027010000002801028010
000e00000911009110000000000007110071100710000000061100611006100051100511000000041100411009110091100000000000071100711000000000000611006110000000511005110000000411004110
010e0000215103500021510000001f510215102151030500215102d5003250024510305003250026510335003e500335003350030500265103250000000305002751000000000002651000000000002451000000
010e00002651035000265100000024510265102651030500265102d5003250024510305003250026510335003e500335003350030500265103250000000305002751000000000002651000000000002451000000
__music__
03 01020344
00 04084344
01 09054344
00 09064344
02 09074344
01 0a0b4344
00 0a0c4344
00 0a0d4344
02 0a0e4344
01 10114344
00 0f124344
00 10114344
00 0f134344
00 10111444
00 0f124344
00 10111444
02 0f134344
00 41555617
00 41164344
00 41165544
01 41161544
00 41161517
00 41161544
02 41161518
00 41565557

