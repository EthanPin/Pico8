pico-8 cartridge // http://www.pico-8.com
version 38
__lua__
function _init()
	make_player()
end

--number of sapsleft to water
sapshit = 0
lvl = 0
doorsfx = true --stops the "door open ring"

--number of shots fired
shots = 0

function _update()
	 
	 move_player()

	 --bullet handeling
	 if (shots < 20) then --if you have ammo
	   if (btnp(‚ùé) and p.dir) then
	     if (p.aim == 1) then --aim up
	       newbullet(p.x+4,p.y+2,4,4,0.3,-2,not p.dir)  --sets bullet start
      elseif (p.aim == 2) then --aim down
        newbullet(p.x+4,p.y+14,4,4,0.3,2,not p.dir)  --sets bullet start
        p.y -= 1 --bullet push
      else --p.aim is 0 
        newbullet(p.x+8,p.y+8,4,4,2,0.1,not p.dir)  --sets bullet start
      end
      sfx(0,-1,4,1) 
      shots += 1
    end
    if (btnp(‚ùé) and not p.dir) then
      if (p.aim == 1) then --aim up
	       newbullet(p.x+4,p.y+2,4,4,-0.3,-2,not p.dir)  --sets bullet start
      elseif (p.aim == 2) then --aim down
        newbullet(p.x+4,p.y+14,4,4,-0.3,2,not p.dir)  --sets bullet start
        p.y -= 2 --bullet push
      else --p.aim is 0
        newbullet(p.x,p.y+8,4,4,-2,0.1,not p.dir)  --sets bullet physics & start
      end
      sfx(0,-1,4,1)
      shots += 1
    end
  end
  local i,j=1,1               --to properly support objects being deleted, can't use del() or deli()
  while (objs[i]) do           --if we used a for loop, adding new objects in object updates would break
    if objs[i]:update() then
      if (i!=j) objs[j]=objs[i] objs[i]=nil --shift objects if necessary
      j+=1
    else objs[i]=nil end       --remove objects that have died or timed out
    i+=1                       --go to the next object (including just added objects)
  end
  --end bullet handeling
end



function make_player()
	 p={}  --create empty table

	 p.x=810 --player's exact pixel
 	p.y=469 --position on screen
 	p.home = true
 	--24/84   stage 1 start 
 	--340/469 stage 2 start
 	p.clm = p.x/8	 --collumn
 	p.row = p.y/8  --row

 	--p.gnd	 = true 	--on ground?
 	p.dir	 = true		--direction true = >>>
 	p.runfrm  = 0		--run anim sprites
	 p.dash = false	--am i dashin
	 p.jump = false	--am i jumpin
  --global declared again below
	 p.rise = 0				--jmp distance
  --0 horizontal, 1 up, 2 down
  p.aim = 0      --aim direction

	 p.sprite=032 --player sprite
end

function move_player()
	 --depending on which buttons
	 --are pressed

	 --left
 	if (btn(‚¨ÖÔ∏è) and not btn(‚û°Ô∏è)) then
		--get the tile and check the flag to the left
		  if --(fget(mget(((p.x-1)/8),((p.y)/8))) != 001) and
		    (fget(mget(((p.x-1)/8),((p.y-1)/8)+1)) != 001) and
		  		(fget(mget(((p.x-1)/8),((p.y-1)/8)+2)) != 001) then--solid
		  		--(fget(mget(((p.x-1)/8),((p.y-1)/8)+1)) != 009) --nets
		  		--(fget(mget(((p.x-1)/8),((p.y-1)/8)+2)) != 009)
						p.x-=1
						walk()
				else
						p.sprite = 034 --hit a wall
		  end
		  p.clm = p.x/8  --update player collumn
    --keeping shooting direction
		  if (not btn(‚ùé)) then p.dir = false end
	 end --left
	 --right
	 if (btn(‚û°Ô∏è) and not btn(‚¨ÖÔ∏è)) then
		  --get the tile and check the flag 2 tiles 2 the right
		  if --(fget(mget((p.x/8)+2,((p.y)/8))) != 001) and
		  		(fget(mget((p.x/8)+2,((p.y-1)/8)+1)) != 001) and
		  		(fget(mget((p.x/8)+2,((p.y-1)/8)+2)) != 001) then--solid
		  		--(fget(mget((p.x/8)+2,((p.y-1)/8)+1)) != 009) and --nets
		  		--(fget(mget((p.x/8)+2,((p.y-1)/8)+2)) != 009)
				  p.x+=1
				  walk()
				else
						p.sprite = 034  --hit a wall
		  end
		  p.clm = p.x/8  --update player collumn
		  --keep shooting direction
		  if (not btn(‚ùé)) then p.dir = true end
	 end --right
	 --both l+r directions
	 if (btn(‚û°Ô∏è) and btn(‚¨ÖÔ∏è)) then
	 		walk()
	 end --both l+r directions
	 
	 --gravity
	 
	 --needs air time after hitting jump (keep upward momentum)
	 
	 --if in the air
	 if (fget(mget(((p.x-1)/8)+2,((p.y)/8)+2)) != 001) and --in air solid
	 		(fget(mget(((p.x-1)/8)+1,((p.y)/8)+2)) != 001) and --in air
	 		(fget(mget(((p.x)/8),((p.y)/8)+2)) != 001) and --in air
	 		(fget(mget(((p.x-1)/8)+2,((p.y)/8)+2)) != 009) and --in air net
	 		(fget(mget(((p.x-1)/8)+1,((p.y)/8)+2)) != 009) and --in air
	 		(fget(mget(((p.x)/8),((p.y)/8)+2)) != 009) then --in air
				--holding jump
				if (btn(üÖæÔ∏è) and p.rise > 0) then
  				--if you hit the ceiling
  				if (fget(mget(((p.x-3)/8)+2,((p.y)/8))) == 001) or --ceiling
	 		    (fget(mget(((p.x-1)/8)+1,((p.y)/8))) == 001) or --ceiling
	 		    (fget(mget(((p.x+3)/8),((p.y)/8))) == 001) then
  				  p.rise -= 5 --hit head penalty
  				  p.sprite = 036 --ouch sprite
  				  sfx(0,-1,2,2)
  				--you are holding jump
  				else
  				  p.rise -= 1
  				  p.y -= 1
  				  if (btn(‚¨ÜÔ∏è)) then
		        p.sprite = 072 --looking up
		        p.aim = 1
		      elseif (btn(‚¨áÔ∏è)) then
		        p.sprite = 102 --looking up
		        p.aim = 2
		      else
  				    p.sprite = 038
  				    p.aim = 0
  				  end
  				end
  		--then you are just falling		
  		else 
  				p.y += 1
  				p.rise = 0
  				if (btn(‚¨ÜÔ∏è)) then
		      p.sprite = 070 --looking up
		      p.aim = 1
		    elseif (btn(‚¨áÔ∏è)) then
		      p.sprite = 104 --looking down
		      p.aim = 2
		    else
  				  p.sprite = 040
  				  p.aim = 0
  			 end
  		end
		--if on ground		
		else 
		  --ready jump height
		  p.rise = 35 --on gnd no jump
				--standing still
				if (not btn(‚û°Ô∏è) and not btn(‚¨ÖÔ∏è)) then
						if (btn(‚¨ÜÔ∏è)) then
		      p.sprite = 064 --looking up
		      p.aim = 1
		    else
						  p.sprite = 032
						  p.aim = 0
						end
				end
				--dropping through net
				if (btn(‚¨áÔ∏è) and ((fget(mget(((p.x-1)/8)+2,((p.y)/8)+2)) == 009) or 
				  (fget(mget(((p.x-1)/8)+1,((p.y)/8)+2)) == 009) or 
				  (fget(mget(((p.x)/8),((p.y)/8)+2)) == 009) )) then
      p.y += 1
    end
				--start jump
				if (btnp(üÖæÔ∏è)) then
    		p.y -= 2
    		p.sprite = 038--jump frame
    		p.jump = true
    		sfx(0,-1,0,2)
  		end
  end
  
  --is home check
  if (p.x < 800 and p.x > 650 and p.y < 488 and p.y > 423) then
		  p.home = true
		else
		  p.home = false
		end    	
  
  --reloading in water
  if (fget(mget(((p.x)/8)+1,((p.y)/8)+1)) == 002) and 
    (shots>0) then --if in water and you don't have a full clip
    shots -= .5
  end
  
  --level 1 (red) portals
  for dist = -2,4 do
    if (fget(mget(((p.x)/8)+dist,((p.y-1)/8)+2)) == 010) then
    	 mset(((p.x)/8)+dist,((p.y-1)/8)+2,112)
    elseif (fget(mget(((p.x)/8)+dist,((p.y-1)/8)+2)) == 014) then
    	 mset(((p.x)/8)+dist,((p.y-1)/8)+2,096)
    end
  end
  if (fget(mget(((p.x)/8)+1,((p.y-1)/8)+2)) == 010) then
    p.x = 30
    p.y = 30
    lvl = 1
    sapshit = 0
    doorsfx = true
    --resets sprites address 0x1000 - 0x3000
    reload(0x1000,0x1000,0x2000)
  end
  
  --level 2 (grn) portals
  for dist = -2,4 do
    if (fget(mget(((p.x)/8)+dist,((p.y-1)/8)+2)) == 011) then
    	 mset(((p.x)/8)+dist,((p.y-1)/8)+2,113)
    elseif (fget(mget(((p.x)/8)+dist,((p.y-1)/8)+2)) == 015) then
    	 mset(((p.x)/8)+dist,((p.y-1)/8)+2,097)
    end
  end
  if (fget(mget(((p.x)/8)+1,((p.y-1)/8)+2)) == 011) then
    p.x = 336
    p.y = 470
    lvl = 2
    sapshit = 0
    doorsfx = true
    --resets sprites address 0x1000 - 0x3000
    reload(0x1000,0x1000,0x2000)
  end

  --level 3 (blu) portals
  for dist = -2,4 do
    if (fget(mget(((p.x)/8)+dist,((p.y-1)/8)+2)) == 012) then
    	 mset(((p.x)/8)+dist,((p.y-1)/8)+2,114)
    elseif (fget(mget(((p.x)/8)+dist,((p.y-1)/8)+2)) == 016) then
    	 mset(((p.x)/8)+dist,((p.y-1)/8)+2,098)
    end
  end
  if (fget(mget(((p.x)/8)+1,((p.y-1)/8)+2)) == 012) then
    p.x = 985
    p.y = 23
    lvl = 3
    sapshit = 0
    doorsfx = true
    --resets sprites address 0x1000 - 0x3000
    reload(0x1000,0x1000,0x2000)
  end
  
  --level 0 (org) portals
  for dist = -2,4 do
    if (fget(mget(((p.x)/8)+dist,((p.y-1)/8)+2)) == 013) then
    	 mset(((p.x)/8)+dist,((p.y-1)/8)+2,115)
    elseif (fget(mget(((p.x)/8)+dist,((p.y-1)/8)+2)) == 017) then
    	 mset(((p.x)/8)+dist,((p.y-1)/8)+2,099)
    end
  end
  if (fget(mget(((p.x)/8)+1,((p.y-1)/8)+2)) == 013) then
    p.x = 830
    p.y = 420
    lvl = 0
    sapshit = 0
    doorsfx = true
    --resets sprites address 0x1000 - 0x3000
    reload(0x1000,0x1000,0x2000)
  end
 
end
-->8
--bullet settings--

--wall flag = 1 
--water flag = 2
--sappling flag = 3,4,5,6,7,8
--glass / net flag = 9
--red portal = 10, 14
--grn portal = 11, 15
--blu portal = 12, 16
--org portal = 13, 17

objs = {}                    --a list of all the objects in the game (starts empty)
function objdraw(o)          --a basic function for drawing objects,
  spr(o.spr,o.x,o.y,1,1,o.dir)            --as long as those objects have spr, x, and y values inside
end

function bulletupdate(b)     --a function for moving bullets a little bit at a time
  b.x += b.dx                 --x moves by the change in x every frame (dx)
  b.y += b.dy                 --y moves by the change in y every frame (dy)
  b.time -= 1                 --if bullets have existed for too long, erase them
  --bullet hits wall
  if (fget(mget(((b.x)/8),((b.y)/8))) == 001) then
    return false
  end
  
  --sappling collision could be consolidated?
  
  --bullet hits yellow sappling
  if (fget(mget(((b.x)/8),((b.y)/8))) == 003) then
    b.spr = 011
    mset(b.x/8,b.y/8,009) --changes sappling to a flower
    sfx(0,-1,5,4)
    sapshit+=1
  end
  --bullet hits red sappling
  if (fget(mget(((b.x)/8),((b.y)/8))) == 004) then
    b.spr = 011
    mset(b.x/8,b.y/8,025) --changes sappling to a flower
    sfx(0,-1,5,4)
    sapshit+=1
  end
  --bullet hits blue sappling
  if (fget(mget(((b.x)/8),((b.y)/8))) == 005) then
    b.spr = 011
    mset(b.x/8,b.y/8,027) --changes sappling to a flower
    sfx(0,-1,5,4)
    sapshit+=1
  end
  --bullet hits pink sappling
  if (fget(mget(((b.x)/8),((b.y)/8))) == 006) then
    b.spr = 011
    mset(b.x/8,b.y/8,029) --changes sappling to a flower
    sfx(0,-1,5,4)
    sapshit+=1
  end
  --bullet hits purple sappling
  if (fget(mget(((b.x)/8),((b.y)/8))) == 007) then
    b.spr = 011
    mset(b.x/8,b.y/8,023) --changes sappling to a flower
    sfx(0,-1,5,4)
    sapshit+=1
  end
  --bullet hits orange sappling
  if (fget(mget(((b.x)/8),((b.y)/8))) == 008) then
    b.spr = 011
    mset(b.x/8,b.y/8,021) --changes sappling to a flower
    sfx(0,-1,5,4)
    sapshit+=1
  end
  
  return b.time > 0           --returns true if still alive, false if it needs to be removed
end

function newbullet(x,y,w,h,dx,dy,dir)  --bullets have position x,y, width, height, and move dx,dy each frame
  local b = {                 --only use the b table inside this function, it's "local" to it
    x=x,y=y,dx=dx,dy=dy,       --the x=x means let b.x = the value stored in newbullet()'s x variable
    w=w,h=h,dir=dir,                   --b.w and b.h are also set to the function's w and h args
    time=26,                   --this is how long a bullet will last before disappearing
    update=bulletupdate,       --you can put functions in tables just like any other value
    spr=010,draw=objdraw         --bullets don't have special drawing code, so re-use a basic object draw
  }
  add(objs,b)                 --now we can manage all bullets in a list
  return b                    --and if some are special, we can adjust them a bit outside of this function
end


-->8
--walk--

function walk()
  --use  <= instead of ==
		if (p.runfrm >= 9 and p.runfrm < 12) then
		  if (btn(‚¨ÜÔ∏è)) then
		    p.sprite = 076 --looking up
		    p.aim = 1      --aim up
		  else
		    p.sprite = 044 --normal
		    p.aim = 0      --reset aim
		  end
		  p.runfrm = 0
		elseif (p.runfrm >= 6 and p.runfrm < 9) then
		  if (btn(‚¨ÜÔ∏è)) then
		    p.sprite = 078
		    p.aim = 1
		  else
		    p.sprite = 046
		    p.aim = 0
		  end
		  p.runfrm += 1
		elseif (p.runfrm >= 3 and p.runfrm < 6) then
		  if (btn(‚¨ÜÔ∏è)) then
		    p.sprite = 076
		    p.aim = 1
		  else
		    p.sprite = 044
		    p.aim = 0
		  end
		  p.runfrm += 1
		else
    if (btn(‚¨ÜÔ∏è)) then
		    p.sprite = 074
		    p.aim = 1
		  else
      p.sprite = 042
      p.aim = 0
    end
    p.runfrm += 1
  end
end
-->8
--draw--

function _draw()
	 cls()

 	--map(0,0,0,0,64,64) --draws map
 	map(0,0,0,0,128,128) --big map
 	
 	--2 coordinates
 	--rect(x1,y1,x2,y2,clr)

 	--hud background 
  rectfill(p.x-32,p.y-76,p.x+60,p.y-59,0)
  rectfill(p.x-31,p.y-75,p.x+59,p.y-60,7)
  
  --score
  print("‚ßó=" .. p.x,p.x-29,p.y-73,0)
  
  --saplings left counter 
  if (lvl == 1) then
    rect(p.x-29,p.y-66,p.x+56,p.y-61,3)
    line(p.x-16,p.y-66,p.x-16,p.y-61,8)
    line(p.x-3 ,p.y-66,p.x-3 ,p.y-61,8)
    line(p.x+8 ,p.y-66,p.x+8 ,p.y-61,8)
    line(p.x+28,p.y-66,p.x+28,p.y-61,8)
    line(p.x+56,p.y-66,p.x+56,p.y-61,10)
    if (sapshit == 13 and doorsfx) then --sap quota reached open gate
    		mset(35,10,017)
    		mset(36,10,017)
    		sfx(0,-1,9,3)
    		doorsfx = false
    end
    if (sapshit == 26 and not doorsfx) then --sap quota reached open gate
    		mset(1,19,017)
    		mset(2,19,017)
    		sfx(0,-1,9,3)
    		doorsfx = true
    end
    if (sapshit == 37 and doorsfx) then --sap quota reached open gate
    		mset(38,34,017)
    		mset(39,34,017)
    		sfx(0,-1,9,3)
    		doorsfx = false
    end
    if (sapshit == 57 and not doorsfx) then --sap quota reached open gate
    		mset(16,42,017)
    		mset(17,42,017)
    		sfx(0,-1,9,3)
    		doorsfx = true
    end
    if (sapshit == 85 and doorsfx) then --sap quota reached open gate
    		mset(11,58,099)
    		mset(22,58,099)
    		sfx(0,-1,9,3)
    		doorsfx = false
    end
  end

  if (lvl == 2) then
    rect(p.x-29,p.y-66,p.x+55,p.y-61,3)
    line(p.x-12,p.y-66,p.x-12,p.y-61,8)
    line(p.x+6 ,p.y-66,p.x+6 ,p.y-61,8)
    line(p.x+14,p.y-66,p.x+14,p.y-61,8)
    line(p.x+23,p.y-66,p.x+23,p.y-61,8)
    line(p.x+42,p.y-66,p.x+42,p.y-61,8)
    line(p.x+55,p.y-66,p.x+55,p.y-61,10)
    if (sapshit == 17 and doorsfx) then --sap quota reached open gate
    		mset(77,52,017)
    		mset(78,52,017)
    		sfx(0,-1,9,3)
    		doorsfx = false
    end
    if (sapshit == 35 and not doorsfx) then --sap quota reached open gate
    		mset(45,42,017)
    		mset(46,42,017)
    		sfx(0,-1,9,3)
    		doorsfx = true
    end
    if (sapshit == 43 and doorsfx) then --sap quota reached open gate
    		mset(75,26,017)
    		mset(75,27,017)
    		sfx(0,-1,9,3)
    		doorsfx = false
    end
    if (sapshit == 52 and not doorsfx) then --sap quota reached open gate
    		mset(42,23,017)
    		mset(43,23,017)
    		sfx(0,-1,9,3)
    		doorsfx = true
    end
    if (sapshit == 71 and doorsfx) then --sap quota reached open gate
    		mset(79,10,017)
    		mset(80,10,017)
    		sfx(0,-1,9,3)
    		doorsfx = false
    end
    if (sapshit == 84 and not doorsfx) then --sap quota reached open gate
    		mset(47,5,099)
    		sfx(0,-1,9,3)
    		doorsfx = true
    end
  end
  
  if (lvl == 3) then
    rect(p.x-29,p.y-66,p.x+46,p.y-61,3)
    line(p.x-16,p.y-66,p.x-16,p.y-61,8)
    line(p.x-8 ,p.y-66,p.x-8 ,p.y-61,8)
    line(p.x+16,p.y-66,p.x+16,p.y-61,8)
    line(p.x+33,p.y-66,p.x+33,p.y-61,8)
    line(p.x+46,p.y-66,p.x+46,p.y-61,10)
    if (sapshit == 13 and doorsfx) then --sap quota reached open gate
    		mset(84,16,017)
    		mset(85,16,017)
    		sfx(0,-1,9,3)
    		doorsfx = false
    end
    if (sapshit == 21 and not doorsfx) then --sap quota reached open gate
    		mset(96,28,017)
    		mset(97,28,017)
    		sfx(0,-1,9,3)
    		doorsfx = true
    end
    if (sapshit == 45 and doorsfx) then --sap quota reached open gate
    		mset(116,31,017)
    		mset(117,31,017)
    		sfx(0,-1,9,3)
    		doorsfx = false
    end
    if (sapshit == 62 and not doorsfx) then --sap quota reached open gate
    		mset(108,20,017)
    		mset(109,20,017)
    		sfx(0,-1,9,3)
    		doorsfx = true
    end
    if (sapshit == 75 and doorsfx) then --sap quota reached open gate
    		mset(105,31,099)
    		sfx(0,-1,9,3)
    		doorsfx = false
    end
  end
  
  if (sapshit > 0) then
   	rectfill(p.x-28,p.y-65,p.x-29+sapshit,p.y-62,11)
  end
  
  if (not p.home) then --show ammo if not home
    --water tank background
    rectfill(p.x-52,p.y-76,p.x-39,p.y-46,0)
    rectfill(p.x-51,p.y-75,p.x-40,p.y-47,7)
    --water tank
    rect(p.x-49,p.y-72,p.x-42,p.y-50,1)
    rectfill(p.x-48,p.y-71,p.x-44,p.y-51,13)
   	rectfill(p.x-48,p.y-71+shots,p.x-43,p.y-51,12)
   	--water tank tickers
   	line(p.x-49,p.y-67,p.x-47,p.y-67,0)
    line(p.x-49,p.y-60,p.x-47,p.y-60,0)
    line(p.x-49,p.y-54,p.x-46,p.y-54,8)
  end
  
  

 	--draw the player's sprite at
 	--p.x,p.y
 	camera(p.x - 56, p.y - 80)
	 spr(p.sprite,p.x,p.y,2,2,not p.dir,false)
	 
	 --bullets draw
  for o in all(objs) do o:draw() end
  
end
__gfx__
0000000064404564bbbbbbbb000000007b77b6bb55555555c7cc7cc70000000000000000a6a7a0aa0000000000000000000000002e3333eeeeeeeeeeeeeeeeee
0000000004046445333bb3330000000063b3060466766666ccc7cccc0000000000000000007606700000000000000c0000000000e703370eeeeeeee333eeeeee
007007004454404463333337000000004640743766666767cccccccc00000000000000007706a6a7000ccc00cccc0000000000003703370eeee33337773eeeee
00077000646464545f3333f6000000006006407667666666ccccc7cc0000000000676000a600b06700c1c01001c1ccc00000000033333333ee3777377703eeee
0007700046540540f6ff6f5f000000006600070666676666c7cccccc00000000007a70007a70b0a70c0cccc00cccc1c000000000333bb333e37770377773eeee
0070070050446454f65f76f6000000006070706667666676cccccccc00077000006bb000a000b000001c0c00c1cc000000000000e3383444ee37777377733eee
00000000446054647ffff5f5000000006007070766676666cc7ccc7c077cc77000033000000bb000000000000c0000c000000000ee33434eee33777333333eee
00000000445446405f7f6f7f000000007666666755555555cccccccc77cccc770000b000000bb000000000000000c00000000000ee3ee3eeeee33333333333ee
08008080000b000b0000000000000000000000000003330000000000020000720000000080080008000000000110171000000000e00e0e00eeee333333333333
8080080800000000000000000000000000000000009993a0000000007220072000000000b0b0000b00000000071c10c0000000000e07b00eeee33333bbb33333
080800800000000000000000000000000000000000999390000000000222022700000000b0b0800b000000001110b0110000000000eb0e70eeee33338333333e
008080080b000b0000000000000000000000000009a993a00000000000072020000000000b00b08b000000000c0b11c700000000007b7e00eeee3333333333ee
80080800000b000b00000000000000000000000009999390000000002702b222000000008b00b0b000000000700b07c100000000e70bb00eeeeee333333333ee
08008080000000000000000000000000000030000999933a000000000222b27000000000b80bb0b800001000c00bb010000070000e0b07e0eeeee44333344eee
808008080000000000000000000000000009900009999930000227000000b00000088b000bbb0b00001110000100b001000ee000000b0000eeee4444ee4444ee
080800800b000b000000000000000000000990000a999a300022b0000000b0000008bb00000bb000001bb0000000b00000e0be00000b0000eeee4444ee4444ee
0000000666000000a000a006655555500a0006655000a0a000000660000000000000066000000000000000000000000000000000000000000000000000000000
00066660566000000000000600055555000655005550000000000066500000000000006650000000000006600000000000000600000000000000000550000000
000055605556000000a0066555555771a06005505555000066666000555000006666600055500000000000655000000000000660000000000000066055500000
0000055600560000a00006000555577100000055557500a000055600571500000005560057750000665550005550000000000065500000000055500055550000
00000055555000000000000000771771000000055555500000000555577500000000055557150000000005005555000066555000555000000060050057150000
0000055557150000a000000005771555000000055555700000000005555550000000000555555000000000555715000000000505555500000060005555555000
000005571715000000a0000cc5555575000000555550700000000005555570000000000555557000000000055555500000000055571550000000000555555000
00000057155000000000069cc5555070000005ccc550000000000055555070000000005555507000000000055555700000000005555570000000000555557000
00000ccc55700000a000069cc5555500000005ccccaaa990000005ccc5500000000005ccc5500000000000555550700000000055555070000000005555507000
00000ccccaaa990000000a9c556655560000059999900000000005ccccaaa990000005ccccaaa990000005ccc5500000000005ccc5500000000005ccc5500000
00005999995556000007009a56665556000705556a00000000000599999000000000059999900000000005ccccaaa990000055ccccaaa990000005ccccaaa990
00005556a55500000007755a566555500007555555000000000705556a000000000705556a000000000005999990000000005599999000000000759999900000
07055555555000000007755a55555500000075500556000000075555550000000007555555000000000705556a000000000055556a000000000775556a000000
07755555550000000000055905555000000005560000000000007550055600000000755005560000000755555500000000755555550000000007555555000000
07555555555000000006555965550000000000000000000000000556000000000000055600000000000075555000000000075555500000000000705555000000
00005555555556000006660066600000000000000000000000000000000000000000000000000000000005555560000000007555560000000000000056000000
00000000000000000000000666000000000000000000000000000660000000000000066000000000000000000000000000000000000000000000000000000000
00000000000000000006666056600000000000000000000000000066500000000000006650000000000006600000000000000600000000000000000550000000
00066600000000000000556055560000000000000000000066666090555000006666609055500000000000655000000000000660000000000000066055500000
00655590000000000000055600560000000000000000000000055690571500000005569057750000665550005550000000000065500000000055500057150000
065000955550000000000055555000000000000000000000000005a557750000000005a557150000000005005715000066555000555000000060059057750000
065065a57155000000000555571500000000000000000000000000a555555000000000a555555000000000955775000000000595571500000060009555555000
000655a57755000000000557171500000000000000000000000000a955557000000000a95555700000000095555550000000009557755000000000a555555000
006500a95557000000000057155000000000000000000000000000c9a5507000000000c9a5507000000000a555557000000000a555557000000000a555557000
065000c9a507000000000ccc55700000000000000000000000000cc96550000000000cc965500000000000a555507000000005a555507000000000a555507000
06500cc96500000000000ccccaaa9900000000000000000000000cc95556000000000cc955560000000005a955500000000005a955500000000005c955500000
00005cc9555560000000599999555600000000000000000000000cc95550000000000cc955500000000005c9a5560000000005c9a550000000000cc9a5560000
00005cc95550000000005556a555000000000000000000000007055555000000000705555500000000000cc96550000000000cc96556000000007cc965000000
0705555555500000070555555550000000000000000000000007555555000000000755555500000000070cc95500000000000cc95500000000077cc955000000
0775555555000000077555555500000000000000000000000000755005560000000075500556000000075cc95500000000750cc95500000000075cc955000000
07555555555000000755555555500000000000000000000000000556000000000000055600000000000075555000000000075555500000000000705555000000
00005555555556000000555555555600000000000000000000000000000000000000000000000000000005555560000000007555560000000000000056000000
000000080000000b0000000c00000009000000000000000000000660000000000000066000000000000000000000000000000000000000000000000000000000
80000800b0000b00c0000c0090000900000000000000000000000066500000000000006650000000000000000000000000000000000000000000000000000000
0080000000b0000000c0000000900000000000000000000066666000555000006666600055500000000000000000000000000000000000000000000000000000
000000080000000b0000000c00000009000000000000000000055600571500000005560057750000000000000000000000000000000000000000000000000000
80000800b0000b00c0000c0090000900000000000000000000000555577500000000055557150000000000000000000000000000000000000000000000000000
0080000000b0000000c0000000900000000000000000000000000005555550000000000555555000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000059cc57000000000059cc57000000000000000000000000000000000000000000000000000
55688556556bb556556cc556556995560000000000000000000000559cc07000000000559cc07000000000000000000000000000000000000000000000000000
e00000003000000010000000f00000000000000000000000000005569cc00000000005569cc00000000000000000000000000000000000000000000000000000
00e0000e003000030010000100f0000f00000000000000000000055a9c5600000000055a9c560000000000000000000000000000000000000000000000000000
00000e00000003000000010000000f000000000000000000000005559a500000000005559a500000000000000000000000000000000000000000000000000000
e00000003000000010000000f00000000000000000000000000705555a000000000705555a000000000000000000000000000000000000000000000000000000
00e0000e003000030010000100f0000f0000000000000000000755555a000000000755555a000000000000000000000000000000000000000000000000000000
00000e00000003000000010000000f00000000000000000000007550095600000000755009560000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000556090000000000055609000000000000000000000000000000000000000000000000000000
556ee5565563355655611556556ff556000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005000000000000005
00000000000000000000000000000000000000000000000000000000000000000006666000000000000000006666600000000c0000c000005066000666006655
0000000000000000000000000000000000000000000000000000000000000000000006006666600000066660000600000000cc000cc000005666006655556550
0000000000000000000000000000000000000000000000000000000000000000000060000006000000000600006000000000cc000cc000006655556550006000
0000000000000000000000000000000000000000000000000000000000000000000666600060000000006000060000000000cc000cc000006600006000006077
0000000000000000000005556600000000000000000000000000000000000000000000000600000000066660666660000090050900509000770000677777777e
000000000000000000055505566006660005555566000666000000000000000000000000666660000000000000000000009500095000950077777777eeeee2ee
00000000000000000057755000555560005555555665556000655500000000000065550000000000006555000000000000a0000a0000a00022eeeee2eeeee2ee
00000000000000000551755055555550055175505555555006566655555500000656665555550000065666555555000000a0000a0000a0002eeeee2eeeee22ee
77770000000000007655555555555500765555555555550075655665555557707565566555555770756556655555577000a9000a9000a9002eeeee2eeeee2eee
77779000000000007677655555556500767765555555650077566555555577707756655555557770775665555555777000c9a00c9a00c9a02eeeee2eeeee2eee
9999990000000004999996555555666499999655555566649995655555555504999565555555550499956555555555040cc9a0cc9a0cc9a02eeeee2eeeee22ee
4999999999999994499999999999999449999999999999944999999999999994499999999999999449999999999999940cc900cc900cc9002eeee2eeeeeee2ee
0499999999999994049999999999999404999999999999940499999999999994049999999999999404999999999999940cc900cc900cc9002eeee2eeeeeee2ee
00444444444444440044444444444444004444444444444400444444444444440044444444444444004444444444444466666666666666662eeee2eeeeeee2ee
000440000000440000044000000044000004400000004400000440000000440000044000000044000004400000004400555555555555555522eeee2eeeeee22e
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044400050b00cccccccc7ccccc7ccccccccccc5
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000400500b0cc7cccccccccbcccc9cccc7cbc5
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000405cb0cbcccccccccccbc099cccbcccbc5
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400990b45cb0ccbccccccccccbc99c9cccbcccb5
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000409bbb45cbccbccccc55cccbccccccccbcccbc5
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000540b3345bccbcc4cc555ccccbccccccccbccbc5
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000005504333454f4fffffff4ff4f4f4ffffffff4ff45
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000005000444066666666666666666666666666666666
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000050555505
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005000050
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000050500505
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000777700000000000000000050055005
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044444444444444440000000050055005
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000444444444444000444444050500505
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000040000040040005000050
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000040000040040050555505
0000000666000000a000a006655555500a0006655000a0a000000660000000000000066000000000000000000000000000000000000000000000000000000000
00066660566000000000000600055555000655005550000000000066500000000000006650000000000006600000000000000600000000000000000550000000
000055605556000000a0066555555771a06005505555000066666000555000006666600055500000000000655000000000000660000000000000066055500000
0000055600560000a00006000555577100000055557500a000055600571500000005560057750000665550005550000000000065500000000055500055550000
00000055555000000000000000771771000000055555500000000555577500000000055557150000000005005555000066555000555000000060050057150000
0000055557150000a000000005771555000000055555700000000005555550000000000555555000000000555715000000000505555500000060005555555000
000005571715000000a0000005555575000000555550700000000005555570000000000555557000000000055555500000000055571550000000000555555000
00000057155000000000065555555070000005555550000000000055555070000000005555507000000000055555700000000005555570000000000555557000
0000005555700000a000065555555500000005565555600000000555555000000000055555500000000000555550700000000055555070000000005555507000
00000555557000000000000555665556000005555550000000000555555600000000055555560000000005555550000000000555555000000000055555500000
00005555555556000007000556665556000705555500000000000555655000000000055565500000000005555566000000005555566000000000055555660000
00005556555500000007755556655550000755555500000000070555550000000007055555000000000005555506000000005555556000000000755555060000
07055555555000000007755555555500000075500556000000075555550000000007555555000000000705555500000000005555550000000007755555000000
07755555550000000000055005555000000005560000000000007550055600000000755005560000000755555500000000755555550000000007555555000000
07555555555000000006555065550000000000000000000000000556000000000000055600000000000075555000000000075555500000000000705555000000
00005555555556000006660066600000000000000000000000000000000000000000000000000000000005555560000000007555560000000000000056000000
000000000000000020000000004040406060404040000000000000000000002000000020000000105050c1000081a15000000000000000000000000000000000
00000000000000007050500000000000005050fb00091900006000000000ebcbdbebfbfb50000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000606000000000000000000000000000000000000000000010505050404040404000000000000000000000000000000000
00000000000000005050000000000000005050502050502000600000405050505050505050000000000000060000000000000000000000000000000000000000
00000000000000000000000000000000606000000000000000008181000000000000000000800010505000000000000000000000000000000000000000000000
00000000000000006000000000000000415050501050000000600000000000000000000050000000000050505000000000000000000000000000000000000000
00000000000000000050505000000000606000000000505050002020000000000000008000202050505000000000000000000000000000000000000000000000
0000000000000000600000006100800020500000500000000060000000cadaeafa000000c8d80000000000600000000000000000000000000000000000000000
00000000000000000050105050707000606000707050501050000000000000000041202020101050505000008070707000000000000000000000000000000000
000000000000000060000000202020201050e8f8000000000060000000fbfbfbfb000000c9d90000000070607000000000000000000000000000000000000000
00000000000000001050101050506060606060605010101050100000a10000800020101010105050505050205050506000000000000000000000000000000000
000000000000000060707050201010105050e9f9fb00700070607020205050501020205050500000002060606020000000000000000000000000000000000000
00000000000000001050101010505050505050505010105050101000200000202010101010505050505010101010105000000000000000000000000000000000
00000000000000006060505050105050505050505050606060606050505050501010505050502020202020202050505000000000000000000000000000000000
00000000000000005050505050505050505050505050505050505050505050505050505050505050505050505050505000000000000000000000000000000000
00000000000000005050505050505050505050505050505050505050505050505050505050505050505050505050505000000000000000000000000000000000
__gff__
0001010009010202030000000000000001000000080007000400050006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0b0c0d0000000000000000000000000e0f1011000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505
0500000000000000000000000000000000000000000000000000000000000000000000000000000005050606000000000000000000000000000000000000000000000000000000000000000000000000000505000000000600000000000000000000000000000000000000000000000000000000060000000000000000000105
0500000000000000000000000000000000000000000000000000000000000000000000000000000005050606000000000000000000001400001a0000000000000008001c000000001a00000000000000000505000000000600000000000000000000000000000000000000000000000000000000060000000000000000000005
0500000000000000000000000000000000000000000000000000000000000000000000000000000005050606160000000000000000000404040404040000000004040202020004040404000000000000000505000000000600000000000000000000000000000000000000000000000000000000060000000000000000000005
0500000000000000000000000000000000000000000000000000000000000000000000000000000005050606021c00000000000000000000000000000000000000000000000000000000000000000000000505000000000600000000000000000000000000000000000000000000000000000000060000000000000000070005
050000000000000000000000000000000000000000180800000000000000000000000000001c0808050506060602000000000000000000000000000000000000000000000000000000000000000000000005050000000006001c000000000000000000000000000700070000000000000000000006071c08001a000505050505
0500000000000000000000000000000000000000040502000000000000000000000000000802020205050505060601050800000000000000000000000000000000000000000000000008000000000000000505000000000607040700000000000000000000000004060400000000000000000007060202020202020505050505
050000000000000008070007001a0018080000040005010000000000000000000000000202000000050500050506060602021a04041c0000000000000008001600000000000000000202020505050000000505000000000604060400000000000000000000000000040000000000000000000706010501010101010105000005
0502020202020202020606060202020202040400000101000000000000000000000000000000000005050000050505060606020101020202000000020102020202060606060606060606060606050000000505000000000600040000000000000000000000000800000000000000000000020201010101010800140016000005
0501010101010101010101010101010101040000000000000000000800001800080000000000000005050000000005050506060606060606060606060606060606060101050505050505050606050504040505000000000600000000000000000000000000000400000004000000001802060606050000000400040004000005
0505050505050505050505050505050505040700000000000007070202020202020505101005050505050000000000000505050505050505050506050505050505050505050500000105050606050510100505000000000600000000000018000000001400000400000004000000070206010501000000000000000000000005
05000000000000000000000000000005050506060606060606060501010101010500000000000000050500000000000000000000000000000005050500000000000000000000000000000006060000000005050000070406000000000004040404040404000000000000000000070605050101000000000000000000001c0005
050000000000000000000000000000000505050505050505050505050505050500000000000000020505181a0000000000000000000000000000000000000000000000000000000000000006060000001a05050000040604000008000005001a001c000500001a000000000707060500000500000000001a0000000000020205
050000000000001c1c000000000000000000000000000000000000000000000000000000080201010505020202080000000000000000000000000000000000000000000000001a000000000606000000020505000000040600000202020102020202020102020202020202020605000005000000000002020202000000000005
0500000000000002020000000000000000000000000000000000000000000007000700000202010105050000010200000000000000000000000000000000000000000000000202010000000606000004010505180000000600050505050000000000000000000000000000070500000500000000000005050505000000000005
050000000000000505000000000000000000000000000000000000000008050606060502010101010505000000000202000000000000000000000000000018001c0000000000000000000006060000000005050200000706070505000514000000000000000000001c0205050000050000000007070500000000050000000005
0500000000000000000000000000000000000000000000000000001c00020505060505000000010505050000000000000000000000000000000000000000020202000000000000000000070606070018000505051010050505050707050200000000000000040000020505000005000000000005050000000505000000000005
0500000016000000000000000400000000000000080000000000000200000000060600000000050105050004000000000000000000000000000800000000000000000000000000000002020606020102020505000000050506060606050000000000000000000000050500000500000008180505000000050000000000180005
0500000502000008001a00000404000018000002020200000007000000000007060607181a08010105050000000000000000000000000002020202000000001400001608000000000000000606000000000505000000000505050505050000000000000000000002050000050000000002020500000005000000000404040405
0510100502020202020202020101020202020201010101010506060606060606060505020202010105050000000000000008001a00070005010101020202020202020202020018000000000606000814000505001c00000004040404000000000000000000000805050005050000000505050000050500000000000000000105
0500000501010101010101010101010505050505050505050505050505050505050505050505050505050400000000000202020202050605050501010101010101010101010202020200000606020202020505000400000000000000040000180000000000000205000005041010040500000005050000001c18001600000005
05000005010500000000000000000000000000000000000000000000000000000000000000000000050500000000000102050505010505050505050505010505050505050505050501000706060505050505050000000800001a000000000004001a000000000505000000000000050505050505000000000202020200000005
0500000505000000000000000000000000000000000000000000000000000000000000000000001a05050000161c02050507060606060606060606060505050606060605060605060506050605060606060505000000040000040000000000000404000000000500000000000000000505050000000000020707000000000005
05000005000000000000000000000000000007000000000000000700000000080018000000000002050510100202050506060605050505050505050505050505050505050505050505060505050505050505050000000000000000000000000000000007010505000000000000001a0000050500000000040604000000000005
050000050000000000000000000018000000060605050505060606070000000202020200000000080505000005050706060505000000000000000000000000000000000000000000000605050500000606050500000000000000000000000000000007010500081c000700001404040700000505000000040404000008001605
0500000000000000000000000000020000000605050506050505060600000000010101000000000205050000000506050500000000000000000000000000000000000000000000000006000500000006060505000000000000000000000400000000010500000404060400000404060400000005050000000000000002020205
0500000000000000000000000000050500000605050101050500050600000000000000000000001a0505040000050505161c0000000000000014001a0008001c00000000000000000006001000000006050505000000000400050505000000000000050000000404060400000404060400000000010000000000000000000005
0500000000000000000000000000050500070605010101010500050600000000000000001c000002050500000005060502020204000000000002020202020202020400000000000000060010080000060505050000000007070506050707000000000500000000040502000000010104000000000100000016001a1c00001405
0500000000000000000000000000000000060605010101050500050600000000000002020200000805050404040606000000000000000000000000000000000000000000000000000605050202000004010505050505050505050505050505051010050000000000040000000000040000000002050000000202020202020205
05000000000000081400000000000000070605050105050500000506000000000000010101000002050500000006060000000018001a0000000000000000000000000000000000060605050500000004010505000000000000000600000000000000051800000000000000000000000000000801000000050505050505050505
050000000000000202020000000000070606050505050500000005060000020200000000000000000505000000060600000000020202020606060606060606060606060606060606050500000000000601050500000000000000060000000000000005021a1600000000000000000000001c0205040404050606060606060605
05020200001a0201010102000700070606050500000000000007050607000000010000000000000005050008070606060606060606060606050505050505050505050505050505050500000000000006010505000000000000000600000000001c02000102020014080000000000000000020501101005060505050505050505
__sfx__
000700000a020110200b73003730126101112015120181201d12035510305103c5101d100003001b7001e60024600187001e7002070032700233000470025400274002840029400294003c400000000000000000
001000003b50039500005003a50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
